"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rideRoutes = void 0;
const express_1 = require("express");
const validateRequest_1 = require("../../middlewares/validateRequest");
const ride_validation_1 = require("./ride.validation");
const user_interface_1 = require("../user/user.interface");
const checkAuth_1 = require("../../middlewares/checkAuth");
const ride_controller_1 = require("./ride.controller");
const router = (0, express_1.Router)();
router.post("/create", (0, validateRequest_1.validateRequest)(ride_validation_1.createRideZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), ride_controller_1.RideController.createRide);
router.patch("/status-change/:rideId", (0, validateRequest_1.validateRequest)(ride_validation_1.rideStatusChangeZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER, user_interface_1.Role.ADMIN), ride_controller_1.RideController.rideStatusChangeAfterRideAccepted);
router.patch("/cancel/:rideId", (0, validateRequest_1.validateRequest)(ride_validation_1.cancelRideZodSchema), (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), ride_controller_1.RideController.cancelRide);
router.get("/all", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), ride_controller_1.RideController.getAllRides);
router.get("/single-ride/:rideId", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), ride_controller_1.RideController.getSingleRideDetails);
router.get("/history/:userId", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), ride_controller_1.RideController.getRideHistory);
router.patch("/reject/:rideId", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideController.rejectRide);
router.patch("/accept/:rideId", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideController.acceptRide);
router.post("/feedback/:rideId", (0, validateRequest_1.validateRequest)(ride_validation_1.createFeedbackZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), ride_controller_1.RideController.createFeedback);
exports.rideRoutes = router;
