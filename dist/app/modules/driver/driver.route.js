"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.driverRoutes = void 0;
const express_1 = require("express");
const driver_controller_1 = require("./driver.controller");
const checkAuth_1 = require("../../middlewares/checkAuth");
const user_interface_1 = require("../user/user.interface");
const driver_validation_1 = require("./driver.validation");
const validateRequest_1 = require("../../middlewares/validateRequest");
const router = (0, express_1.Router)();
router.post("/create", (0, validateRequest_1.validateRequest)(driver_validation_1.createDriverZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), driver_controller_1.driverController.createDriver);
router.get("/all", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.RIDER, user_interface_1.Role.DRIVER), driver_controller_1.driverController.getAllDrivers);
router.patch("/approve-status/:driverId", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), driver_controller_1.driverController.driverApprovedStatusChange);
router.patch("/availability-status", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), driver_controller_1.driverController.driverStatusChange);
router.patch("/location", (0, validateRequest_1.validateRequest)(driver_validation_1.updateLocationZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), driver_controller_1.driverController.driverLocationUpdate);
router.get("/earnings-history/:driverId", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER, user_interface_1.Role.ADMIN), driver_controller_1.driverController.getDriverEarningsHistory);
router.patch("/is-suspended/:driverId", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), driver_controller_1.driverController.driverSuspendedStatusChange);
router.patch("/rating/:driverId", (0, validateRequest_1.validateRequest)(driver_validation_1.driverRatingZodSchema), (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), driver_controller_1.driverController.updateDriverRating);
exports.driverRoutes = router;
